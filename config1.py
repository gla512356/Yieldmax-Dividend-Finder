# config1.py — ex_dates/pay_dates/dec_dates 전체 예시

import pandas as pd
from typing import Dict, List, Tuple

# 그룹 설정
WEEKLY = frozenset([
    'CHPY','GPTY','LFGY','QDTY','RDTY',
    'SDTY','SLTY','ULTY','YMAG','YMAX'
])

GRP_A  = frozenset([
    'BRKC','CRSH','FEAT','FIVY','GOOY',
    'OARK','RBLY','RDYY','SNOY','TSLY',
    'TSMY','XOMO','YBIT'
])

GRP_B  = frozenset([
    'BABO','DIPS','FBY','GDXY','JPMO',
    'MARO','MRNY','NVDY','PLTY'
])

GRP_C  = frozenset([
    'ABNY','AMDY','CONY','CVNY','DRAY',
    'FIAT','GMEY','HOOY','MSFO',
    'NFLY','PYPY'
])

GRP_D  = frozenset([
    'AIYY','AMZY','APLY','DISO','HIYY',
    'MSTY','SMCY','WNTR','XYZY','YQQQ'
])

GROUP_META = {
    '주배당': ('주배당', '#e8f5e9'),
    '월A': ('월배당 A그룹', '#e3f2fd'),
    '월B': ('월배당 B그룹', '#fff3e0'),
    '월C': ('월배당 C그룹', '#fce4ec'),
    '월D': ('월배당 D그룹', '#ede7f6'),
}

def build_ticker_map() -> Dict[str, Tuple[str, str, str]]:
    m: Dict[str, Tuple[str, str, str]] = {}
    for t in WEEKLY:
        name, color = GROUP_META['주배당']
        m[t] = ('주배당', name, color)
    for t in GRP_A:
        name, color = GROUP_META['월A']
        m[t] = ('월A', name, color)
    for t in GRP_B:
        name, color = GROUP_META['월B']
        m[t] = ('월B', name, color)
    for t in GRP_C:
        name, color = GROUP_META['월C']
        m[t] = ('월C', name, color)
    for t in GRP_D:
        name, color = GROUP_META['월D']
        m[t] = ('월D', name, color)
    return m

TICKER_TO_GROUP = build_ticker_map()

# -----------------------------
# SCHEDULE_RAW — CSV 반영 (dec_dates 포함)
# -----------------------------
SCHEDULE_RAW: Dict[str, Dict[str, List[str]]] = {
    '주배당': {
        'dec_dates': ['2025-01-02','2025-01-08','2025-01-15','2025-01-22','2025-01-29',
                      '2025-02-05','2025-02-12','2025-02-19','2025-02-26','2025-03-05',
                      '2025-03-12','2025-03-19','2025-03-26','2025-04-02','2025-04-09',
                      '2025-04-16','2025-04-23','2025-04-30','2025-05-07','2025-05-14',
                      '2025-05-21','2025-05-28','2025-06-04','2025-06-11','2025-06-18',
                      '2025-06-25','2025-07-02','2025-07-09','2025-07-16','2025-07-23',
                      '2025-07-30','2025-08-06','2025-08-13','2025-08-20','2025-08-27',
                      '2025-09-03','2025-09-10','2025-09-17','2025-09-24','2025-10-01',
                      '2025-10-08','2025-10-15','2025-10-22','2025-10-29','2025-11-05',
                      '2025-11-12','2025-11-19','2025-11-26','2025-12-03','2025-12-10',
                      '2025-12-17','2025-12-24','2025-12-31'],
        'ex_dates':  ['2025-01-03','2025-01-09','2025-01-16','2025-01-23','2025-01-30',
                      '2025-02-06','2025-02-13','2025-02-20','2025-02-27','2025-03-06',
                      '2025-03-13','2025-03-20','2025-03-27','2025-04-03','2025-04-10',
                      '2025-04-17','2025-04-24','2025-05-01','2025-05-08','2025-05-15',
                      '2025-05-22','2025-05-29','2025-06-05','2025-06-12','2025-06-20',
                      '2025-06-26','2025-07-03','2025-07-10','2025-07-17','2025-07-24',
                      '2025-07-31','2025-08-07','2025-08-14','2025-08-21','2025-08-28',
                      '2025-09-04','2025-09-11','2025-09-18','2025-09-25','2025-10-02',
                      '2025-10-09','2025-10-16','2025-10-23','2025-10-30','2025-11-06',
                      '2025-11-13','2025-11-20','2025-11-28','2025-12-04','2025-12-11',
                      '2025-12-18','2025-12-26','2026-01-02'],
        'pay_dates': ['2025-01-06','2025-01-10','2025-01-17','2025-01-24','2025-01-31',
                      '2025-02-07','2025-02-14','2025-02-21','2025-02-28','2025-03-07',
                      '2025-03-14','2025-03-21','2025-03-28','2025-04-04','2025-04-11',
                      '2025-04-21','2025-04-25','2025-05-02','2025-05-09','2025-05-16',
                      '2025-05-23','2025-05-30','2025-06-06','2025-06-13','2025-06-23',
                      '2025-06-27','2025-07-07','2025-07-11','2025-07-18','2025-07-25',
                      '2025-08-01','2025-08-08','2025-08-15','2025-08-22','2025-08-29',
                      '2025-09-05','2025-09-12','2025-09-19','2025-09-26','2025-10-03',
                      '2025-10-10','2025-10-17','2025-10-24','2025-10-31','2025-11-07',
                      '2025-11-14','2025-11-21','2025-12-01','2025-12-05','2025-12-12',
                      '2025-12-19','2025-12-29','2026-01-05']
    },
    '월A': {
        'dec_dates': ['2025-01-22','2025-02-19','2025-03-19','2025-04-16','2025-05-14',
                      '2025-06-11','2025-07-09','2025-08-06','2025-09-03','2025-10-01',
                      '2025-10-29','2025-11-26','2025-12-24'],
        'ex_dates':  ['2025-01-23','2025-02-20','2025-03-20','2025-04-17','2025-05-15',
                      '2025-06-12','2025-07-10','2025-08-07','2025-09-04','2025-10-02',
                      '2025-10-30','2025-11-28','2025-12-26'],
        'pay_dates': ['2025-01-24','2025-02-21','2025-03-21','2025-04-21','2025-05-16',
                      '2025-06-13','2025-07-11','2025-08-08','2025-09-05','2025-10-03',
                      '2025-10-31','2025-12-01','2025-12-29']
    },
    '월B': {
        'dec_dates': ['2025-01-02','2025-01-29','2025-02-26','2025-03-26','2025-04-23',
                      '2025-05-21','2025-06-18','2025-07-16','2025-08-13','2025-09-10',
                      '2025-10-08','2025-11-05','2025-12-03','2025-12-31'],
        'ex_dates':  ['2025-01-03','2025-01-30','2025-02-27','2025-03-27','2025-04-24',
                      '2025-05-22','2025-06-20','2025-07-17','2025-08-14','2025-09-11',
                      '2025-10-09','2025-11-06','2025-12-04','2026-01-02'],
        'pay_dates': ['2025-01-06','2025-01-31','2025-02-28','2025-03-28','2025-04-25',
                      '2025-05-23','2025-06-23','2025-07-18','2025-08-15','2025-09-12',
                      '2025-10-10','2025-11-07','2025-12-05','2026-01-05']
    },
    '월C': {
        'dec_dates': ['2025-01-08','2025-02-05','2025-03-05','2025-04-02','2025-04-30',
                      '2025-05-28','2025-06-25','2025-07-23','2025-08-20','2025-09-17',
                      '2025-10-15','2025-11-12','2025-12-10'],
        'ex_dates':  ['2025-01-09','2025-02-06','2025-03-06','2025-04-03','2025-05-01',
                      '2025-05-29','2025-06-26','2025-07-24','2025-08-21','2025-09-18',
                      '2025-10-16','2025-11-13','2025-12-11'],
        'pay_dates': ['2025-01-10','2025-02-07','2025-03-07','2025-04-04','2025-05-02',
                      '2025-05-30','2025-06-27','2025-07-25','2025-08-22','2025-09-19',
                      '2025-10-17','2025-11-14','2025-12-12']
    },
    '월D': {
        'dec_dates': ['2025-01-15','2025-02-12','2025-03-12','2025-04-09','2025-05-07',
                      '2025-06-04','2025-07-02','2025-07-30','2025-08-27','2025-09-24',
                      '2025-10-22','2025-11-19','2025-12-17'],
        'ex_dates':  ['2025-01-16','2025-02-13','2025-03-13','2025-04-10','2025-05-08',
                      '2025-06-05','2025-07-03','2025-07-31','2025-08-28','2025-09-25',
                      '2025-10-23','2025-11-20','2025-12-18'],
        'pay_dates': ['2025-01-17','2025-02-14','2025-03-14','2025-04-11','2025-05-09',
                      '2025-06-06','2025-07-07','2025-08-01','2025-08-29','2025-09-26',
                      '2025-10-24','2025-11-21','2025-12-19']
    }
}

# -----------------------------
# parse_schedule 수정 (dec_dates 지원)
# -----------------------------
def parse_schedule(raw: Dict[str, Dict[str, List[str]]]) -> Dict[str, Dict[str, List[pd.Timestamp]]]:
    parsed: Dict[str, Dict[str, List[pd.Timestamp]]] = {}
    for k, v in raw.items():
        if isinstance(v, dict):
            ex_list, pay_list, dec_list = [], [], []
            for s in v.get('ex_dates', []):
                try: ex_list.append(pd.to_datetime(s).normalize())
                except: pass
            for s in v.get('pay_dates', []):
                try: pay_list.append(pd.to_datetime(s).normalize())
                except: pass
            for s in v.get('dec_dates', []):
                try: dec_list.append(pd.to_datetime(s).normalize())
                except: pass
            parsed[k] = {
                'ex_dates': sorted(set(ex_list)),
                'pay_dates': sorted(set(pay_list)),
                'dec_dates': sorted(set(dec_list))
            }
    return parsed

SCHEDULE = parse_schedule(SCHEDULE_RAW)

# 2025년 미국 증시 휴장일(예시)
US_MARKET_HOLIDAYS_2025 = [
    '2025-01-01','2025-01-20','2025-02-17','2025-04-18',
    '2025-05-26','2025-07-04','2025-09-01','2025-11-27','2025-12-25'
]
